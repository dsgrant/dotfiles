#!/bin/bash

get_git_repository_details() {
  local branchName=''
  local tmp=''

  # Check if the current directory is in a Git repository
  [ "$(git rev-parse &>/dev/null; printf $?)" -ne 0 ] && return

  # Check if in `.git/` directory (some of the following
  # checks don't make sense/won't work in the `.git` directory)
  [ "$(git rev-parse --is-inside-git-dir)" == "true" ] && return

  # Check for uncommitted changes in the index
  if ! $(git diff --quiet --ignore-submodules --cached); then
    tmp="$tmp+";
  fi

  # Check for unstaged changes
  if ! $(git diff-files --quiet --ignore-submodules --); then
    tmp="$tmp!";
  fi

  # Check for untracked files
  if [ -n "$(git ls-files --others --exclude-standard)" ]; then
    tmp="$tmp?";
  fi

  # Check for stashed files
  if $(git rev-parse --verify refs/stash &>/dev/null); then
    tmp="$tmp$";
  fi

  [ -n "$tmp" ] && tmp=" [$tmp]"

  branchName="$( printf "$( git rev-parse --abbrev-ref HEAD 2> /dev/null \
    || git rev-parse --short HEAD 2> /dev/null \
    || printf " (unknown)" )" | tr -d "\n" )"

  printf "%s" "$1$branchName$tmp"
}

set_prompts() {
  local black='' blue='' bold='' cyan='' green='' orange='' \
        purple='' red='' reset='' white='' yellow=''

  if [ -x /usr/bin/tput ] && tput setaf 1 &> /dev/null;
  then
    tput sgr0
    bold=$(tput bold)
    reset=$(tput sgr0)
    black=$(tput setaf 0)
    blue=$(tput setaf 33)
    cyan=$(tput setaf 37)
    green=$(tput setaf 64)
    orange=$(tput setaf 166)
    purple=$(tput setaf 125)
    red=$(tput setaf 124)
    white=$(tput setaf 15)
    yellow=$(tput setaf 136)
  else
    bold=''
    reset="\e[0m"
    black="\e[1;30m"
    blue="\e[1;34m"
    cyan="\e[1;36m"
    green="\e[1;32m"
    orange="\e[1;33m"
    purple="\e[1;35m"
    red="\e[1;31m"
    white="\e[1;37m"
    yellow="\e[1;33m"
  fi

  # PS1 - Default interactive prompt
  PS1="\[\033]0;\w\007\]"
  PS1+="\n"
  # PS1+="\[$bold\]"
  PS1+="\[$purple\]\h "
  PS1+="\[$orange\]⑉ "
  PS1+="\[$blue\]\u  "
  PS1+="\[$orange\]∴ "
  PS1+="\[$green\]\w"
  PS1+="\$(get_git_repository_details \"$orange  ␥ $cyan\")"
  PS1+="\n"
  PS1+="\[$reset$orange\]⚛ \[$reset\]"
  export PS1

  # PS2 - Continuation interactive prompt
  PS2='✎ '
  export PS2

  # PS4 - Debug prompt
  PS4="+$( tput cr && tput cuf 6 && printf "%s $reset" )"
  export PS4
}

set_prompts

unset -f set_prompts
